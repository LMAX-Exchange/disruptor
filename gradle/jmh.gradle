//
// Configure JMH benchmarks
//

sourceSets {
    jmh {
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }
}

def jmhLibVersion = '1.36'

dependencies {
    jmhImplementation "org.openjdk.jmh:jmh-core:${jmhLibVersion}"
    jmhAnnotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:${jmhLibVersion}"

    jmhImplementation 'net.openhft:affinity:3.20.0'
}

jmh {
    jmhVersion = jmhLibVersion
    jvmArgsPrepend = ['-Xms256m -Xmx256m -XX:MaxDirectMemorySize=1g']
    resultsFile.set(project.file("${project.buildDir}/reports/jmh/result.json"))
    profilers = [ 'pauses' ]
    resultFormat = 'JSON'
    failOnError = true
    verbosity = 'NORMAL'
    includeTests = true
}

task jmhProfilers(type: JavaExec, description:'Lists the available profilers for the jmh task', group: 'jmh') {
    classpath = sourceSets.jmh.runtimeClasspath
    mainClass.set('org.openjdk.jmh.Main')
    args '-lprof'
}
